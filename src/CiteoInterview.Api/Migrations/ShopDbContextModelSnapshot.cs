// <auto-generated />
using System;
using CiteoInterview.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CiteoInterview.Api.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CiteoInterview.Api.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(590),
                            Email = "pierre@citeo.com"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(650),
                            Email = "paul@citeo.com"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(650),
                            Email = "jaque@citeo.com"
                        });
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(670),
                            CustomerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(670),
                            CustomerId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(670),
                            CustomerId = 3
                        });
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(680),
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(690),
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(690),
                            OrderId = 2,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(690),
                            OrderId = 3,
                            ProductId = 4,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(420),
                            Name = "IMac",
                            Price = 2500,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(460),
                            Name = "Iphone",
                            Price = 800,
                            Stock = 150
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(460),
                            Name = "Ipad",
                            Price = 500,
                            Stock = 88
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 18, 17, 17, 27, 642, DateTimeKind.Local).AddTicks(460),
                            Name = "Casque Bose",
                            Price = 400,
                            Stock = 2
                        });
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.Order", b =>
                {
                    b.HasOne("CiteoInterview.Api.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.OrderItem", b =>
                {
                    b.HasOne("CiteoInterview.Api.Models.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Order");

                    b.HasOne("CiteoInterview.Api.Models.Product", "Product")
                        .WithMany("OrderItem")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.Customer", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.Order", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("CiteoInterview.Api.Models.Product", b =>
                {
                    b.Navigation("OrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
